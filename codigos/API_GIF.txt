import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:personal_finance/models/Git.dart';
import 'package:http/http.dart' as http;

void main() => runApp(const MyApp());

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  late Future<List<Gif>> _listGifs;

  Future<List<Gif>> _getGifs() async {
    final response = await http.get(Uri.parse(
        "https://api.giphy.com/v1/gifs/trending?api_key=m54sspSbn37dd8jj4ZeObEFtdM4yuSvT&limit=10&rating=g"));

    List<Gif> gifs = [];
    if (response.statusCode == 200) {
      String body = utf8.decode(response.bodyBytes);
      final jsonData = jsonDecode(body);

      for (var element in jsonData['data']) {
        gifs.add(Gif(element['title'], element['images']['downsized']['url']));
      }
      //print(jsonData['data'][0]['type']);
      return gifs;
    } else {
      throw Exception('Fallo la conexion');
    }
  }

  @override
  void initState() {
    // ignore: todo
    // TODO: implement initState
    super.initState();
    _listGifs = _getGifs();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Material App',
      home: Scaffold(
          appBar: AppBar(
            title: const Text('Consumir API'),
          ),
          body: FutureBuilder(
              future: _listGifs,
              builder: (context, snapshot) {
                if (snapshot.hasData) {
                  //print(snapshot.data);
                  return GridView.count(
                      crossAxisCount: 2,
                      children: _GifsList(snapshot.data ?? []));
                } else if (snapshot.hasError) {
                  //print(snapshot.error);
                  return Text('Error');
                }
                return Center(
                  child: CircularProgressIndicator(),
                );
              })),
    );
  }

  List<Widget> _GifsList(List<Gif> data) {
    List<Widget> gifs = [];
    for (var gif in data) {
      gifs.add(Card(
          child: Column(
        children: [
          Expanded(child: Image.network(gif.url, fit: BoxFit.fill)),
          // Padding(
          //   padding: const EdgeInsets.all(8.0),
          //   child: Text(gif.name),
          //),
        ],
      )));
    }
    return gifs;
  }
}
